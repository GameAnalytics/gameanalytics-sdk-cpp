# This workflow is for a CMake project running on Debian using an Ubuntu host runner.
name: CMake Build and Test 

on:
  workflow_call:
    inputs:
      build_type:
        description: 'Build type (e.g., "Debug", "Release", "RelWithDebInfo", "MinSizeRel")'
        default: '"Debug"'
        required: true
        type: string
      upload_artifacts:
        description: 'Whether to upload artifacts (true/false)'
        default: false
        required: true
        type: boolean

jobs:
  cmake_build:
    runs-on: ubuntu-latest
    container:
      image: debian:stable-slim  # Debian environment for the build

    strategy:
      fail-fast: false
      matrix:
        os: [debian-stable]
        build_type: ${{ fromJSON(format('[{0}]', inputs.build_type || '"Debug","Release"')) }}
        c_compiler: [clang]
        cpp_compiler: [clang++]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install Clang, CMake, and Libraries
      run: |
        apt-get update
        apt-get install -y clang libc++-dev libc++abi-dev cmake make git lld

    - name: Check Clang Settings
      run: |
        clang --version
        clang++ --version
        echo "Checking clang headers..."
        clang++ -v -E -x c++ /dev/null
        echo "Check ldd..."
        ldd --version

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --verbose

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} --verbose --output-on-failure

    - name: Package Build Artifacts
      run: |
        mkdir -p ${{ steps.strings.outputs.build-output-dir }}/package
        cp ${{ steps.strings.outputs.build-output-dir }}/${{ matrix.build_type }}/*GameAnalytics.* ${{ steps.strings.outputs.build-output-dir }}/package/ || true
        cp -r ${{ github.workspace }}/include ${{ steps.strings.outputs.build-output-dir }}/package/
        
    - name: Upload Build Artifact
      if: ${{ inputs.upload_artifacts }}
      uses: actions/upload-artifact@v4
      with:
        name: ga-cpp-sdk-${{ matrix.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}
        path: ${{ steps.strings.outputs.build-output-dir }}/package/
        retention-days: 3